load("D:/Karen's/PhD/R program/Processed_data/binnedforgamm.csv")
load("D:/Karen's/PhD/R program/Processed_data/trackdata/densecells_popbased/binnedwithdist.csv")
load("D:/Karen's/PhD/R program/workspace/apr2015/combgraphs.RData")
read.csv("d:/Karen's/PhD/R program/binned.csv", header=TRUE, sep=";") <- binned2
read.csv("d:/Karen's/PhD/R program/binnedforgamm.csv", header=TRUE, sep=";") <- binned
binned <- read.csv("d:/Karen's/PhD/R program/binnedforgamm.csv", header=TRUE, sep=";")
binned <- read.csv("d:/Karen's/PhD/R program/Processed_data/binnedforgamm.csv", header=TRUE, sep=";")
library(ggplot2)
library(grid)
library(ggthemes)
library(gridExtra)
library(reshape2)
grid.newpage()
text <- element_text(size = 20, face="bold") #change the size of the axes
theme_set(theme_bw())
summary(binned)
qplot(X, Y, data = binned, color = factor(cond), group = factor(cond))+
guides(col = guide_legend(nrow = 25)) + scale_y_reverse()+ geom_path(aes(group=factor(cond)))
qplot(X, Y, data = binned, color = factor(ID), group = factor(ID))+
guides(col = guide_legend(nrow = 25)) + scale_y_reverse()+ geom_path(aes(group=factor(ID)))
qplot(X, Y, data = binned, color = factor(ID), group = factor(ID))+
guides(col = guide_legend(nrow = 25)) + scale_y_reverse()
qplot(X, Y, data = binned [binned$cond=="Con", ], color = factor(ID), group = factor(ID))+
guides(col = guide_legend(nrow = 25)) + scale_y_reverse()
qplot(X, Y, data = binned [binned$cond=="Con", ], color = factor(ID), group = factor(ID))+
guides(col = guide_legend(nrow = 25)) + scale_y_reverse()+geom_path(aes(group=factor(ID)))
qplot(X, Y, data = binned [binned$cond=="Si", ], color = factor(ID), group = factor(ID))+
guides(col = guide_legend(nrow = 25)) + scale_y_reverse()+geom_path(aes(group=factor(ID)))
raw.binned <- read.csv("D:/Karen's/PhD/R program/Processed_data/trackdata/densecells_popbased/raw.binned.csv", sep=";")
View(raw.binned)
qplot(X, Y, data = raw.binned [raw.binned$cond=="Si", ], color = factor(ID), group = factor(ID))+
guides(col = guide_legend(nrow = 25)) + scale_y_reverse()+geom_path(aes(group=factor(ID)))
Si <- read.csv("D:/Karen's/PhD/R program/Processed_data/trackdata/densecells_popbased/binneddata/day3 si.binned.cor .csv", sep=";")
View(Si)
qplot(X, Y, data = Si, color = factor(A), group = factor(I))+
guides(col = guide_legend(nrow = 25)) + scale_y_reverse()+geom_path(aes(group=factor(ID)))
qplot(X, Y, data = Si, color = factor(A), group = factor(A))+
guides(col = guide_legend(nrow = 25)) + scale_y_reverse()+geom_path(aes(group=factor(A)))
levels(Si%A)
levels(Si$A)
Si$A
factor(levels(Si$A))
str(Si)
as.factor(levels(Si$A))
levels(as.factor(Si$A))
qplot(X, Y, data = Si [Si$A== "0", ]) +
scale_colour_gradient(low="lightgrey", high="black") +
geom_path(aes(color=V), size=2, lineend="square", arrow=arrow(angle=45, ends="last", type= "closed", length=unit (0.1, "inches"))) +
annotate("path",x = 278 + 16*cos(seq(0,2*pi,length.out=100)), y=270 + 16*sin(seq(0,2*pi,length.out=100)), size=2)+
xlim(200, 520) + ylim (200, 380)+
labs(list(X="X", Y = "Y", color="Velocity (µm/s)")) + scale_y_reverse() +
theme(axis.text=element_text(size=25), axis.title=element_text(size=35,face="bold"),
plot.title = element_text(size =35, face="bold"),
legend.key.width=unit(1,"cm"),legend.key.height=unit(1,"cm"), legend.position=c(0.75, 0.92),
legend.direction="horizontal",
strip.text.x = text, strip.text.y = text, legend.title=text, legend.text=element_text(size=15),
panel.margin=unit(1, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
qplot(X, Y, data = Si [Si$A== "0", ]) +
scale_colour_gradient(low="lightgrey", high="black") +
geom_path(aes(color=V), size=2, lineend="square", arrow=arrow(angle=45, ends="last", type= "closed", length=unit (0.1, "inches"))) +
labs(list(X="X", Y = "Y", color="Velocity (µm/s)")) + scale_y_reverse() +
theme(axis.text=element_text(size=25), axis.title=element_text(size=35,face="bold"),
plot.title = element_text(size =35, face="bold"),
legend.key.width=unit(1,"cm"),legend.key.height=unit(1,"cm"), legend.position=c(0.75, 0.92),
legend.direction="horizontal",
strip.text.x = text, strip.text.y = text, legend.title=text, legend.text=element_text(size=15),
panel.margin=unit(1, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
qplot(X, Y, data = Si [Si$A== "0", ]) +
scale_colour_gradient(low="lightgrey", high="black") +
geom_path(aes(color=V), size=2, lineend="square", arrow=arrow(angle=45, ends="last", type= "closed", length=unit (0.1, "inches"))) +
labs(list(X="X", Y = "Y", color="Velocity (µm/s)")) + scale_y_reverse()
Si$A==0
subset(Si(Si$A==0, ))
subset(Si(Si$A==0))
subset(Si(Si$A=="0"))
subset[Si$A==0, ]
subset[Si$A=="0", ]
subset(Si, Si$A==0)
library(ggplot2)
library(grid)
qplot(X, Y, data=t1 [t1$A<1500, ], color = factor(A), group = factor(A))+ geom_point(size=1)+
geom_path(lineend="round", size=1, arrow=arrow(angle=30, ends="last", type= "closed", length=unit (0.3, "inches")),
mapping=aes(group=factor(A))) +theme_classic() +
labs(list(title="Silicon Alox Bead"))+
theme(axis.text=element_text(size=35, face="bold"), axis.title=element_text(size=35,face="bold"),
legend.position="none", plot.title = element_text(size =35, face="bold")) +
annotate("path", x = 452+61.5*cos(seq(0,2*pi,length.out=100)), y=345+61.5*sin(seq(0,2*pi,length.out=100)), size=2)+
xlim(0, 1000) + ylim (800, 0)
t1=Si
qplot(X, Y, data=t1 [t1$A<1500, ], color = factor(A), group = factor(A))+ geom_point(size=1)+
geom_path(lineend="round", size=1, arrow=arrow(angle=30, ends="last", type= "closed", length=unit (0.3, "inches")),
mapping=aes(group=factor(A))) +theme_classic() +
labs(list(title="Silicon Alox Bead"))+
theme(axis.text=element_text(size=35, face="bold"), axis.title=element_text(size=35,face="bold"),
legend.position="none", plot.title = element_text(size =35, face="bold")) +
annotate("path", x = 452+61.5*cos(seq(0,2*pi,length.out=100)), y=345+61.5*sin(seq(0,2*pi,length.out=100)), size=2)+
xlim(0, 1000) + ylim (800, 0)
qplot(X, Y, data=t1 [t1$A<1500, ], color = factor(A), group = factor(A))+ geom_point(size=1)+
theme_classic() +
labs(list(title="Silicon Alox Bead"))+
theme(axis.text=element_text(size=35, face="bold"), axis.title=element_text(size=35,face="bold"),
legend.position="none", plot.title = element_text(size =35, face="bold")) +
annotate("path", x = 452+61.5*cos(seq(0,2*pi,length.out=100)), y=345+61.5*sin(seq(0,2*pi,length.out=100)), size=2)+
xlim(0, 1000) + ylim (800, 0)
qplot(X, Y, data = binned [binned$cond=="Con", ], color = factor(ID), group = factor(ID))+
guides(col = guide_legend(nrow = 25)) + scale_y_reverse()
qplot(X, Y, data = Si [Si$A== "0", ]) +
scale_colour_gradient(low="lightgrey", high="black") +
labs(list(X="X", Y = "Y", color="Velocity (µm/s)")) + scale_y_reverse()
qplot(X, Y, data = Si [Si$A== "0", ]) +
scale_colour_gradient(low="lightgrey", high="black") +
labs(list(X="X", Y = "Y", color="Velocity (µm/s)")) + scale_y_reverse()
qplot(X, Y, data = Si [Si$A== "0", ]) +
scale_colour_gradient(low="lightgrey", high="black")
qplot(X, Y, data = Si [Si$A== "0", ])
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()+geom_path()
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()+geom_path(aes(x=T))
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()+geom_path(aes(x=X, y=Y, z=T))
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()+geom_path(aes(x=X, y=Y))
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()+geom_path(aes(x=X, y=T))
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()+scale_colour_gradient(low="lightgrey", high="black")
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()+geom_path(9)
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()+geom_path()
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()+geom_line(9)
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()+geom_line()
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()+geom_path(aes(group=T))
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()+geom_point()
qplot(X, Y, data = Si [Si$A== "0", ])+scale_y_reverse()+geom_point()+geom_path()
subset(Si, Si$A==0)
qplot(X, Y, data = Si [Si$A== "0", ])+
geom_point()
qplot(X, Y, data = Si [Si$A== "0", ])+geom_point(9)
qplot(X, Y, data = Si [Si$A== "0", ])+geom_point()
qplot(X, Y, data = Si [Si$A== "0", ])+geom_point()+geom_path(aes(y=V, x=T))
qplot(X, Y, data = Si [Si$A== "0", ])+geom_point()+geom_path(aes(x=T))
qplot(X, Y, data = Si [Si$A== "0", ])+geom_point()+geom_line(aes(x=T))
qplot(X, Y, data = Si [Si$A== "0", ])+geom_point()+geom_line(aes(x=T, y=V))
qplot(T, V, data = Si [Si$A== "0", ])
qplot(T, V, data = Si [Si$A== "0", ])+geom_line()
qplot(X, Y, data = Si [Si$A== "0", ])+geom_point()+geom_line(aes(x=X, y=Y))
qplot(X, Y, data = Si [Si$A== "0", ])+geom_point()+geom_line(aes(y=Y))
qplot(X, Y, data = Si [Si$A== "0", ])+geom_point()+geom_line(aes(x=X))
qplot(X, Y, data = Si [Si$A== "0", ])+geom_point()+geom_line()
qplot(X, Y, data = Si [Si$A== "0", ])+geom_point()
qplot(X, Y, data = Si [Si$A== "0", ]) +
scale_colour_gradient(low="lightgrey", high="black") +
labs(list(X="X", Y = "Y", color="Velocity (µm/s)")) +  labs(list(X="X", Y = "Y", color="Velocity (µm/s)")) + scale_y_reverse() +
theme(axis.text=element_text(size=25), axis.title=element_text(size=35,face="bold"),
plot.title = element_text(size =35, face="bold"),
legend.key.width=unit(1,"cm"),legend.key.height=unit(1,"cm"), legend.position=c(0.75, 0.92),
legend.direction="horizontal",
strip.text.x = text, strip.text.y = text, legend.title=text, legend.text=element_text(size=15),
panel.margin=unit(1, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
qplot(X, Y, data = Si [Si$A== "0", ]) +
scale_colour_gradient(low="lightgrey", high="black") +
labs(list(X="X", Y = "Y", color="Velocity (µm/s)")) + scale_y_reverse() +
qplot(X, Y, data = Si [Si$A== "0", ]) +
scale_colour_gradient(low="lightgrey", high="black") +
labs(list(X="X", Y = "Y", color="Velocity (µm/s)")) + scale_y_reverse()
qplot(X, Y, data = Si [Si$A== "0", ]) +
scale_colour_gradient(low="lightgrey", high="black") + geom_point(aes(color=V))
qplot(X, Y, data = Si [Si$A== "0", ]) +
scale_colour_gradient(low="lightgrey", high="black") + geom_point(aes(color=V, size=V))
save.image("D:/Karen's/PhD/R program/workspace/sept 2015/tracks.RData")
